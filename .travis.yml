language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Home
# 같은 의존성은 다음 배포 때부터 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# master 브랜치에 푸쉬 되었을때 수행하는 명령어
script: "./gradlew clean build"

# 권환이 없을시에 2번째 방법
#before_install:
#  - chmod +x gradlew

before_deploy:
  - zip -r aws_jwt_oauth_service *
  - mkdir -p deploy
  - mv aws_jwt_oauth_service.zip deploy/aws_jwt_oauth_service.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: wooinabillion # s3 버켓 이름
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일접근을 private 으로 (엑세스 제어 목록)
    local_dir: deploy # before_ deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY
    bucket: wooinabillion # s3 버켓 이름
    key: aws_jwt_oauth_service.zip # 빌드파일을 압축해서 전달
    bundle_type: zip # 압축 확장자
    application: aws_jwt_oauth_service # 웹 컨솔에서 등록한 codedeploy 애플리케이션
    deployment_group: aws_jwt_oauth_service_group  # 웹 컨솔에서 등록한 CodeDeploy 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true



# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - wooinabillion@gmail.com